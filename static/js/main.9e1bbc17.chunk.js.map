{"version":3,"sources":["../../src/LatLngGraticule.ts","App.tsx","index.tsx"],"names":["ctx","fillStyle","style","fontColour","latLngGraticuleName","App","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","LayersControl","position","BaseLayer","checked","name","TileLayer","url","attribution","Overlay","LayerGroup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e1bbc17.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useMapEvents } from 'react-leaflet';\r\n// TODO - Make this configurable through props.\r\n/**\r\n * This controls the lat/lng interval of the graticule, in degrees.\r\n */\r\nvar defaultLatLngInterval = [\r\n    20,\r\n    20,\r\n    20,\r\n    20,\r\n    10,\r\n    10,\r\n    5,\r\n    5,\r\n    1,\r\n    1,\r\n    0.25,\r\n    0.25,\r\n    0.1,\r\n    0.05,\r\n    0.05,\r\n    0.05,\r\n    0.025,\r\n    0.025,\r\n    0.025,\r\n];\r\n/**\r\n * This procedure handles drawing the graticule\r\n * @param map\r\n * @param canvas\r\n * @param style\r\n * @returns\r\n */\r\nvar drawGraticule = function (map, canvas, style) {\r\n    var currentLatLngInterval = defaultLatLngInterval[Math.round(map.getZoom())];\r\n    var ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n        return;\r\n    }\r\n    var leftTopLl = map.containerPointToLatLng({\r\n        x: 0,\r\n        y: 0,\r\n    });\r\n    var rightBottomLl = map.containerPointToLatLng({\r\n        x: canvas.width,\r\n        y: canvas.height,\r\n    });\r\n    // Round down so we're guaranteed to show the first graticule line\r\n    var baseStartingLatitude = Math.floor(rightBottomLl.lat / currentLatLngInterval) * currentLatLngInterval;\r\n    var baseStartingLongitude = Math.floor(leftTopLl.lng / currentLatLngInterval) * currentLatLngInterval;\r\n    // Draw the latitude lines\r\n    for (var i = baseStartingLatitude; i <= leftTopLl.lat; i += currentLatLngInterval) {\r\n        var westEnd = map.latLngToContainerPoint({\r\n            lat: i,\r\n            lng: leftTopLl.lng,\r\n        });\r\n        var eastEnd = map.latLngToContainerPoint({\r\n            lat: i,\r\n            lng: rightBottomLl.lng,\r\n        });\r\n        drawLine(ctx, westEnd, eastEnd, style);\r\n        drawLatitudeLabel(ctx, i, westEnd, style);\r\n    }\r\n    // Draw the longitude lines\r\n    for (var i = baseStartingLongitude; i <= rightBottomLl.lng; i += currentLatLngInterval) {\r\n        var northEnd = map.latLngToContainerPoint({\r\n            lat: leftTopLl.lat,\r\n            lng: i,\r\n        });\r\n        var southEnd = map.latLngToContainerPoint({\r\n            lat: rightBottomLl.lat,\r\n            lng: i,\r\n        });\r\n        drawLine(ctx, northEnd, southEnd, style);\r\n        drawLongitudeLabel(ctx, i, southEnd, style);\r\n    }\r\n};\r\n/**\r\n * This procedure draws a line between two points on a canvas.\r\n * @param ctx\r\n * @param pointOne\r\n * @param pointTwo\r\n * @param style\r\n */\r\nvar drawLine = function (ctx, pointOne, pointTwo, style) {\r\n    ctx.lineWidth = style.outLineWeight;\r\n    ctx.strokeStyle = style.outlineColour;\r\n    ctx.fillStyle = style.outlineColour;\r\n    ctx.beginPath();\r\n    ctx.moveTo(pointOne.x, pointOne.y);\r\n    ctx.lineTo(pointTwo.x, pointTwo.y);\r\n    ctx.stroke();\r\n    ctx.lineWidth = style.lineWeight;\r\n    ctx.strokeStyle = style.lineColour;\r\n    ctx.fillStyle = style.lineColour;\r\n    ctx.stroke();\r\n};\r\n/**\r\n * Given a latitude, this procedure will draw a label on the canvas.\r\n * @param ctx\r\n * @param latitude\r\n * @param point\r\n * @param style\r\n */\r\nvar drawLatitudeLabel = function (ctx, latitude, point, style) {\r\n    if (Math.abs(latitude) < 90) {\r\n        var labelText = void 0;\r\n        if (latitude === 0) {\r\n            labelText = '0';\r\n        }\r\n        else if (latitude > 0) {\r\n            labelText =\r\n                latitude\r\n                    .toFixed(3)\r\n                    .toString()\r\n                    .replace(/(\\.0+|0+)$/, '') + 'N';\r\n        }\r\n        else {\r\n            labelText =\r\n                Math.abs(latitude)\r\n                    .toFixed(3)\r\n                    .toString()\r\n                    .replace(/(\\.0+|0+)$/, '') + 'S';\r\n        }\r\n        ctx.fillStyle = style.fontBackground;\r\n        ctx.font = style.fontType;\r\n        var textWidth = ctx.measureText(labelText).width;\r\n        var textHeight = ctx.measureText(labelText).actualBoundingBoxAscent;\r\n        ctx.fillRect(point.x + 10, point.y - textHeight, textWidth + 3, textHeight + 6);\r\n        ctx.fillStyle = style.fontColour;\r\n        ctx.fillText(labelText, point.x + 11, point.y + 3);\r\n    }\r\n};\r\n/**\r\n * Given a longitude, this procedure will draw a label on the canvas.\r\n * @param ctx\r\n * @param longitude\r\n * @param point\r\n * @param style\r\n */\r\nvar drawLongitudeLabel = function (ctx, longitude, point, style) {\r\n    var labelText;\r\n    if (longitude === 0) {\r\n        labelText = '0';\r\n    }\r\n    else if (longitude > 0) {\r\n        labelText =\r\n            longitude\r\n                .toFixed(3)\r\n                .toString()\r\n                .replace(/(\\.0+|0+)$/, '') + 'E';\r\n    }\r\n    else {\r\n        labelText =\r\n            Math.abs(longitude)\r\n                .toFixed(3)\r\n                .toString()\r\n                .replace(/(\\.0+|0+)$/, '') + 'W';\r\n    }\r\n    var textWidth = ctx.measureText(labelText).width;\r\n    var textHeight = ctx.measureText(labelText).actualBoundingBoxAscent;\r\n    ctx.font = style.fontType;\r\n    ctx.fillStyle = style.fontBackground;\r\n    ctx.fillRect(point.x - textWidth / 2 - 1, point.y - 3 * textHeight - 3, textWidth + 3, textHeight + 6);\r\n    ctx.fillStyle = style.fontColour;\r\n    ctx.fillText(labelText, point.x - textWidth / 2, point.y - 2 * textHeight);\r\n};\r\n/**\r\n * This is the functional component which contains the graticule\r\n * @param props\r\n * @returns\r\n */\r\nvar LatLngGraticule = function (props) {\r\n    // Line/label properties\r\n    var fontColour = props.fontColour || '#FFF';\r\n    var fontBackground = props.fontBackground || '#000';\r\n    var lineColour = props.lineColour || '#000';\r\n    var lineOutlineColour = props.lineOutlineColour || '#FFF';\r\n    var lineWeight = props.lineWeight || 2;\r\n    var lineOutlineWeight = props.lineOutlineWeight || 3;\r\n    var fontType = props.fontType || '16px Courier New';\r\n    var initCanvas = document.createElement('canvas');\r\n    var _a = useState(initCanvas), canvas = _a[0], setCanvas = _a[1];\r\n    canvas.classList.add('leaflet-zoom-animated');\r\n    canvas.classList.add(props.name);\r\n    var name = props.name;\r\n    var map = useMapEvents({\r\n        viewreset: function () {\r\n            reset(map, canvas, gridShown);\r\n        },\r\n        move: function () {\r\n            reset(map, canvas, gridShown);\r\n        },\r\n        overlayadd: function (e) {\r\n            showGrid(e, map, canvas, name);\r\n        },\r\n        overlayremove: function (e) {\r\n            clearScreen(e, name, canvas);\r\n        },\r\n    });\r\n    var _b = useState(props.checked), gridShown = _b[0], setGridVisbility = _b[1];\r\n    map.getPanes().overlayPane.appendChild(canvas);\r\n    // Initial draw if required\r\n    useEffect(function () {\r\n        reset(map, canvas, gridShown);\r\n    }, []);\r\n    /**\r\n     * This procedure is called when the map is moved or the view is reset.\r\n     * @param map\r\n     * @param canvas\r\n     * @param showGrid\r\n     */\r\n    function reset(map, canvas, showGrid) {\r\n        if (showGrid) {\r\n            var mapLeftTop = map.containerPointToLayerPoint([0, 0]);\r\n            canvas.style['transform'] = \"translate3d(\" + mapLeftTop.x + \"px,\" + mapLeftTop.y + \"px,0)\";\r\n            canvas.width = map.getSize().x;\r\n            canvas.height = map.getSize().y;\r\n            var ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                drawGraticule(map, canvas, {\r\n                    lineWeight: lineWeight,\r\n                    outLineWeight: lineOutlineWeight,\r\n                    lineColour: lineColour,\r\n                    outlineColour: lineOutlineColour,\r\n                    fontColour: fontColour,\r\n                    fontBackground: fontBackground,\r\n                    fontType: fontType,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * This procedure will set state to ensure the graticule is displayed\r\n     * @param e\r\n     * @param map\r\n     * @param canvas\r\n     * @param name\r\n     */\r\n    function showGrid(e, map, canvas, name) {\r\n        if (e.name === name) {\r\n            setGridVisbility(true);\r\n            reset(map, canvas, true);\r\n        }\r\n    }\r\n    /**\r\n     * This procedure will set state to ensure the graticule is hidden\r\n     * @param e\r\n     * @param name\r\n     * @param canvas\r\n     */\r\n    function clearScreen(e, name, canvas) {\r\n        if (e.name === name) {\r\n            var ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                setGridVisbility(false);\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n};\r\nexport default LatLngGraticule;\r\n//# sourceMappingURL=LatLngGraticule.js.map","import { LayerGroup, LayersControl, MapContainer, TileLayer } from 'react-leaflet';\nimport './App.css';\n\nimport LatLngGraticule from 'react-leaflet-lat-lng-graticule';\n\n// Assigning the same name to the overlay as it's named in the control box\n// makes it much easier to toggle it on and off when multiple overlays\n// are employed.\nconst latLngGraticuleName = 'LAT/LNG';\n// Controls whether the overlay is displayed on map load\nconst overlayEnabled = true;\nfunction App() {\n  return (\n    <MapContainer\n      center={[45.4, -75.7]}\n      zoom={8}\n      minZoom={3}\n      maxZoom={16}\n      maxBounds={[\n        [-90, -180],\n        [90, 180],\n      ]}\n    >\n      <LayersControl position=\"topright\">\n        <LayersControl.BaseLayer checked name=\"ESRI Satellite\">\n          <TileLayer\n            url=\"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"ESRI Clarity\">\n          <TileLayer\n            url=\"https://clarity.maptiles.arcgis.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM Topo\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM Topo\">\n          <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" attribution=\"OSM\" />\n        </LayersControl.BaseLayer>\n        <LayersControl.Overlay checked={overlayEnabled} name={latLngGraticuleName}>\n          <LayerGroup>\n            <LatLngGraticule checked={overlayEnabled} name={latLngGraticuleName} />\n          </LayerGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n    </MapContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}